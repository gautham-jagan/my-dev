name: streaming-dataflow

# Controls when the workflow will run

on:
  #  push:
  #    branches: [ feature ]
  #   paths:
  #     - 'streaming-dataflow/**'
   pull_request:
    branches: [ "dev", "qa", "prod","main","feature" ]
    types:
      - opened
   workflow_dispatch:
jobs:
  setup-build:
    if: ${{ github.event_name == 'workflow_dispatch' || github.event_name == 'pull_request' }} 
    name: Setup Build Jobs
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.files.outputs.matrix }}
      job-list: ${{ steps.files.outputs.job-list }}
    steps: 

    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Get changed files in the dataflow folder
      id: changed-files-config
      uses: tj-actions/changed-files@v35
      with:
        files: 'streaming-dataflow/**'
        dir_names: "true"

    - name: Extract branch name
      id: extract_branch
      shell: bash
      run: echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_OUTPUT

    - name: List all changed files
      id: files
      run: |
        array=()
        configFiles=()
        echo ${{ steps.changed-files-config.outputs.any_changed }}
        for file in ${{ steps.changed-files-config.outputs.all_changed_files }}; do
          IFS='/' read -a FILENAME <<< "$file"
          array+=("${FILENAME[0]}/${FILENAME[1]}/${FILENAME[2]}")
        done
        unset dupes
        declare -A dupes
        for i in "${array[@]}"; do
            if [[ -z ${dupes[$i]} ]]; then
                NEWARRAY+=("$i")
            fi
            dupes["$i"]=1
        done
        unset dupes 
        echo "${NEWARRAY[@]}"
        if [[ ${{ github.event_name == 'pull_request' }} ]]; then
          for file in ${NEWARRAY[@]}; do
            configFiles+=($(find $file -name '${{ steps.extract_branch.outputs.branch }}.json'))
          done
        fi
        if [[ ${{ github.event_name == 'pull_request' }} ]]; then
          for file in ${NEWARRAY[@]}; do
            configFiles+=($(find $file -name '${{ github.base_ref }}.json'))
          done
        fi
        
        echo ${configFiles[@]}
        jsonString=$( echo ${configFiles[@]}  | jq  -R -s -c 'sub("\n$";"") | split(" ")'  )
        jobListString=$( echo ${NEWARRAY[@]}  | jq  -R -s -c 'sub("\n$";"") | split(" ")'  )
        echo $jsonString
        echo $jobListString
        echo "matrix=$jsonString" >> $GITHUB_OUTPUT
        echo "job-list=$jobListString" >> $GITHUB_OUTPUT

  CI:
    if: ${{ github.event_name == 'pull_request' }}
    needs: setup-build
    name: streaming dataflow Integration
    runs-on: ubuntu-latest
    strategy:
        matrix:
            manifest: ${{ fromJson(needs.setup-build.outputs.matrix) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: JSON to variables
        uses: rgarcia-phi/json-to-variables@v1.1.0
        with:
          filename: '${{ matrix.manifest }}'
          prefix: infra
          masked: true 
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11 

      - name: upload-github artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.infra_run_job_location_folder }}
          path: streaming-dataflow/${{ env.infra_run_job_location_folder }}  
  CD:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    needs: setup-build
    name: streaming dataflow Deployment
    runs-on: ubuntu-latest
    strategy:
        matrix:
            manifest: ${{ fromJson(needs.setup-build.outputs.matrix) }}
    
    steps:
      - uses: actions/checkout@v2
      - name: Extract branch name
        id: extract_branch
        shell: bash
        run: echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_OUTPUT
      
      - name: JSON to variables
        uses: rgarcia-phi/json-to-variables@v1.1.0
        with:
          filename: '${{ matrix.manifest }}'
          prefix: infra
          masked: true 
    
      - name: Build and  Push to Composer Environment
        uses: HCAEDP/hca-hin-composit-action-dataflow-streaming-j@main
        with:
           GOOGLE_CREDENTIALS: ${{secrets.GOOGLE_CREDENTIALS}}
           repository: "HCAEDP/migration-sbx"
           projectname: ${{ env.infra_run_projectname }}
           location: ${{ env.infra_run_location  }}
           network: ${{ env.infra_run_network }}
           subnet: ${{ env.infra_run_subnet}}
           job: ${{ env.infra_run_job }}
           workers: ${{ env.infra_run_workers }}
           input: ${{ env.infra_run_input }}
           tablespec: ${{ env.infra_run_BASE_tablespec }}
           deadletter: ${{ env.infra_run_deadletter }}
           staging: ${{ env.infra_run_staging }}
           job_location_folder: ${{ env.infra_run_job_location_folder}}


# on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # push:
  #   branches: [ "main" ]
  #   # paths:
  #   #   - '**.java'
  #   #   - '**pom.xml'
  # pull_request:
  #   branches: [ "main" ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
  # This workflow contains a single job called "build"
  # build:
    # The type of runner that the job will run on
    # runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    # steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # - uses: actions/checkout@v3
      # - name: JSON to variables
      #   uses: rgarcia-phi/json-to-variables@v1.1.0
      #   with:
      #     filename: 'streaming-dataflow/java/job-one/config/sandbox.json'
      #     prefix: infra
      #     masked: true
      # - id: 'auth'
      #   name: Authenticate to Google Cloud
      #   uses: 'google-github-actions/auth@v0'
      #   with:
      #     credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'
      # - name: GCP setup
      #   uses: 'google-github-actions/setup-gcloud@v0.6.0'
      #   with:
      #     project_id: '${{ env.infra_run_projectname }}'
      
      # - name: Set up JDK 11
      #   uses: actions/setup-java@v1
      #   with:
      #     java-version: 11
      
      # - name: Execute Script
      #   shell: bash
      #   run: |
      #     bash ./scripts/build.sh com.google.cloud.teleport.templates.PubSubToBigQuery \
      #     --project=${{ env.infra_run_projectname }} \
      #     --usePublicIps=false \
      #     --jobName=${{env.infra_run_job}} \
      #     --stagingLocation=${{env.infra_run_staging}} \
      #     --tempLocation=${{env.infra_run_temp}} \
      #     --subnetwork=${{env.infra_run_subnet}}    \
      #     --network=${{env.infra_run_network}} \
      #     --runner=DataflowRunner \
      #     --numWorkers= ${{env.infra_run_workers}} \
      #     --region=${{env.infra_run_location}} \
      #     --inputTopic=${{env.infra_run_input}} \
          # --outputTableSpec=${{env.infra_run_tablespec}} \
          # --outputDeadletterTable=${{env.infra_run_deadletter}}
          
